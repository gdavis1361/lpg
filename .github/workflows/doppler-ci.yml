name: Build with Doppler Environment Variables

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm run install:all
      
      # Install and configure Doppler CLI for secure environment variable access
      # Follow these steps to set up the required secret:
      # 1. Create a service token in Doppler dashboard with read access to your project
      # 2. Add this token as a repository secret named 'DOPPLER_TOKEN' in GitHub
      # See: https://docs.doppler.com/docs/github-actions
      # Docs: https://github.com/marketplace/actions/doppler-cli
      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v2
      
      # Set up Doppler token as an environment variable for all subsequent steps
      - name: Set Doppler Token Environment
        run: echo "DOPPLER_TOKEN=${{ secrets.DOPPLER_TOKEN }}" >> $GITHUB_ENV
      
      # Verify no secrets in code, aligning with your CI/CD rules
      - name: Verify no secrets in code
        run: |
          pip install detect-secrets
          detect-secrets scan
      
      # Run tests with Doppler environment variables
      - name: Run frontend tests
        working-directory: ./lpg-ui
        run: doppler run --project lpg --config test -- npm run test
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
      
      # Build with Doppler environment variables
      - name: Build with Doppler
        working-directory: ./lpg-ui
        run: doppler run --project lpg --config prod -- npm run build
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
      
      # Enforce TypeScript strict mode as per your rules
      - name: TypeScript strict check
        working-directory: ./lpg-ui
        run: doppler run --project lpg --config dev -- npm run type-check
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
